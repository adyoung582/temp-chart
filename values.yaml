global:
  operator:
    enabled: false
    rollout:
      autoPause: true



  application:
    create: false
    links: []
    allowClusterRoles: true
  hosts:
    domain: example.com
    https: true
    externalIP:
    ssh: ~

  ingress:
    configureCertmanager: true
    annotations: {}
    enabled: true

  initialRootPassword: {}

  psql:
    password: {}

  redis:
    password:
      enabled: true

  gitaly:
    authToken: {}
    internal:
      names: ['default']
    external: []

  minio:
    enabled: true
    credentials: {}

  appConfig:
    enableUsagePing: true
    enableImpersonation:
    defaultCanCreateGroup: true
    usernameChangingEnabled: true
    issueClosingPattern:
    defaultTheme:
    defaultProjectsFeatures:
      issues: true
      mergeRequests: true
      wiki: true
      snippets: true
      builds: true
    webhookTimeout:

    cron_jobs: {}

    gravatar:
      plainUrl:
      sslUrl:

    extra:
      googleAnalyticsId:
      piwikUrl:
      piwikSiteId:

    lfs:
      bucket: git-lfs
      connection: {}
    artifacts:
      bucket: gitlab-artifacts
      connection: {}
    uploads:
      bucket: gitlab-uploads
      connection: {}
    packages:
      bucket: gitlab-packages
      connection: {}
    externalDiffs:
      when:
      bucket: gitlab-mr-diffs
      connection: {}

    pseudonymizer:
      configMap:
      bucket: gitlab-pseudo
      connection: {}
    backups:
      bucket: gitlab-backups
      tmpBucket: tmp

    incomingEmail:
      enabled: false
      address: ""
      host: "imap.gmail.com"
      port: 993
      ssl: true
      startTls: false
      user: ""
      password:
        secret: ""
        key: password
      mailbox: inbox
      idleTimeout: 60

    ldap:
      servers: {
                 main:
                   label: 'LDAP'
                   host: 'dzv-ipa01.dmz.budgd.au'
                   port: 636
                   uid: 'uid'
                   bind_dn: 'uid=admin,cn=users,cn=accounts,dc=example,dc=com'
                   password.secret: 'ipa-admin-secret'
                   password.key: 'password'
                   base: 'cn=accounts,dc=dmz,dc=budgd,dc=au'
                   ca_file: '/etc/ssl/certs/ca-cert-ca.pem'
                   attributes:
                     username: ['uid']
                     email: ['mail']
                     first_name: 'givenName'
                     last_name: 'sn'
      }
    omniauth:
      enabled: false
      autoSignInWithProvider:
      syncProfileFromProvider: []
      syncProfileAttributes: ['email']
      allowSingleSignOn: ['saml']
      blockAutoCreatedUsers: true
      autoLinkLdapUser: false
      autoLinkSamlUser: false
      externalProviders: []
      providers: []

  shell:
    authToken: {}
    hostKeys: {}

  railsSecrets: {}

  registry:
    bucket: registry
    certificate: {}
    httpSecret: {}

  runner:
    registrationToken: {}

  smtp:
    enabled: false
    address: smtp.mailgun.org
    port: 2525
    user_name: ""
    password:
      secret: ""
      key: password
    authentication: "plain"
    starttls_auto: false
    openssl_verify_mode: "peer"

  email:
    from: ''
    display_name: GitLab
    reply_to: ''
    subject_suffix: ''

  time_zone: UTC

  service:
    annotations: {}

  antiAffinity: soft

  workhorse: {}

  certificates:
    image:
      repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
      tag: 20171114-r3
    customCAs: [ca-cert]

  kubectl:
    image:
      repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
      tag: v1.12.10
      pullSecrets: []

upgradeCheck:
  enabled: true
  image:
    repository: busybox
    tag: latest
  tolerations: []
  resources:
    requests:
      cpu: 50m


certmanager:
  install: false
  rbac:
    create: true

nginx-ingress:
  enabled: false
  tcpExternalConfig: "true"
  controller:
    config:
      hsts-include-subdomains: "false"
      server-name-hash-bucket-size: "256"
      enable-vts-status: "true"
      use-http2: "false"
      ssl-ciphers: "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4"
      ssl-protocols: "TLSv1.1 TLSv1.2"
      server-tokens: "false"
    extraArgs:
      force-namespace-isolation: ""
    service:
      externalTrafficPolicy: "Local"
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
    publishService:
      enabled: true
    replicaCount: 3
    minAvailable: 2
    scope:
      enabled: true
    stats:
      enabled: true
    metrics:
      enabled: true
      service:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "10254"
  defaultBackend:
    minAvailable: 1
    replicaCount: 2
    resources:
      requests:
        cpu: 5m
        memory: 5Mi
  rbac:
    create: true
  serviceAccount:
    create: true

prometheus:
  install: true
  rbac:
    create: true
  alertmanager:
    enabled: false
  alertmanagerFiles:
    alertmanager.yml: {}
  kubeStateMetrics:
    enabled: false
  nodeExporter:
    enabled: false
  pushgateway:
    enabled: false

redis-ha:
  enabled: true
  nameOverride: redis

postgresql:
  install: false
  postgresUser: gitlab
  postgresDatabase: gitlabhq_production
  imageTag: 9.6.8
  usePasswordFile: true
  existingSecret: 'secret'
  metrics:
    enabled: true



shared-secrets:
  enabled: true
  image:
    tag: 28a3e18b1d65ab0e7a8e086b3c6e6ebbed4aeca3
  rbac:
    create: true

gitlab-runner:
  install: false
  rbac:
    create: true
  runners:
    locked: false
    cache:
      cacheType: s3
      s3BucketName: runner-cache
      cacheShared: true
      s3BucketLocation: us-east-1
      s3CachePath: gitlab-runner
      s3CacheInsecure: false
